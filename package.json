{
  "name": "node-seal",
  "version": "1.0.23",
  "description": "Microsoft SEAL in Javascript",
  "repository": {
    "type" : "git",
    "url" : "https://github.com/nickangelou/node-seal"
  },
  "author": { 
    "name" : "Nick Angelou",
    "email" : "nick.angelou@sectify.com",
    "url" : "https://iaccelerator.com"
  },
  "keywords": [
    "homomorphic",
    "encryption",
    "microsoft",
    "seal",
    "web assembly",
    "fhe"
  ],
  "main": "dist/seal.node.js",
  "browser": "dist/seal.js",
  "library": "src/main.js",
  "module": "src/main.js",
  "license": "MIT",
  "scripts": {
    "start": "webpack-dev-server",
    "build": "NODE_ENV=production webpack",
    "test": "node --max-old-space-size=4096 `which jest`",
    "test:evaluate": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!evaluate-).)*$\"",
    "test:evaluate:low": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!evaluate-).)*$\" \"^((?!low).)*$\"",
    "test:evaluate:medium": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!evaluate-).)*$\" \"^((?!medium).)*$\"",
    "test:evaluate:high": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!evaluate-).)*$\" \"^((?!high).)*$\"",
    "test:encrypt": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!encrypt-).)*$\"",
    "test:encrypt:low": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!encrypt-).)*$\" \"^((?!low).)*$\"",
    "test:encrypt:medium": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!encrypt-).)*$\" \"^((?!medium).)*$\"",
    "test:encrypt:high": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!encrypt-).)*$\" \"^((?!high).)*$\"",
    "test:genkeys": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-keys-).)*$\"",
    "test:genkeys:low": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-keys-).)*$\" \"^((?!low).)*$\"",
    "test:genkeys:medium": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-keys-).)*$\" \"^((?!medium).)*$\"",
    "test:genkeys:high": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-keys-).)*$\" \"^((?!high).)*$\"",
    "test:gengaloiskeys": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-galois-keys-).)*$\"",
    "test:gengaloiskeys:low": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-galois-keys-).)*$\" \"^((?!low).)*$\"",
    "test:gengaloiskeys:medium": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-galois-keys-).)*$\" \"^((?!medium).)*$\"",
    "test:gengaloiskeys:high": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-galois-keys-).)*$\" \"^((?!high).)*$\"",
    "test:genrelinkeys": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-relin-keys-).)*$\"",
    "test:genrelinkeys:low": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-relin-keys-).)*$\" \"^((?!low).)*$\"",
    "test:genrelinkeys:medium": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-relin-keys-).)*$\" \"^((?!medium).)*$\"",
    "test:genrelinkeys:high": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!generate-relin-keys-).)*$\" \"^((?!high).)*$\"",
    "test:initialize": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!initialize-).)*$\"",
    "test:initialize:low": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!initialize-).)*$\" \"^((?!low).)*$\"",
    "test:initialize:medium": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!initialize-).)*$\" \"^((?!medium).)*$\"",
    "test:initialize:high": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!initialize-).)*$\" \"^((?!high).)*$\"",
    "test:low": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!low).)*$\"",
    "test:medium": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!medium).)*$\"",
    "test:high": "node --max-old-space-size=4096 `which jest` --testPathIgnorePatterns=\"^((?!high).)*$\"",
    "coverage": "node --max-old-space-size=4096 `which jest` --collectCoverageFrom=src/lib/**.js --coverage src/test",
    "submodule:update": "git submodule update --init --recursive",
    "em:update":  "cd submodules/emsdk/ && ./emsdk update-tags && cd ../../",
    "em:init":  "cd submodules/emsdk/ && ./emsdk install sdk-1.38.30-64bit && ./emsdk activate sdk-1.38.30-64bit && cd ../../",
    "seal:clean": "rm -rf ./src/bin/* && cd ./submodules/SEAL/native rm -rf ./bin/* && rm -rf ./lib/*  && rm -rf ./src/CMakeFiles && rm -rf ./src/CMakeCache.txt && cd ../../../",
    "seal:cmake":  "source ./submodules/emsdk/emsdk_env.sh && cd ./submodules/SEAL/native/src/ && emcmake cmake -DSEAL_LIB_BUILD_TYPE=Shared -DSEAL_USE_CXX17=ON -DCMAKE_BUILD_TYPE=Debug . && cd ../../../",
    "seal:make":  "source ./submodules/emsdk/emsdk_env.sh && cd ./submodules/SEAL/native/src/ && emmake make -j`python -c 'import multiprocessing as mp; print(mp.cpu_count())'` && cd ../../../",
    "seal:build":  "source ./submodules/emsdk/emsdk_env.sh && cd ./submodules/SEAL/native/lib/ && em++ -Wall -Os --bind -o seal.js libseal.so -s DISABLE_EXCEPTION_CATCHING=0 -s ALLOW_MEMORY_GROWTH=1 -s EXPORT_ES6=1 -s MODULARIZE=1 --closure 1 -s \"BINARYEN_TRAP_MODE='clamp'\" -s SINGLE_FILE=1 && cp seal* ../../../../src/bin/ && cd ../../../"
  },
  "devDependencies": {
    "esm": "^3.2.25",
    "file-loader": "^3.0.1",
    "jest": "^24.8.0",
    "webpack": "^4.32.2",
    "webpack-cli": "^3.3.2",
    "webpack-dev-server": "^3.4.1",
    "webpack-node-externals": "^1.7.2"
  },
  "browserslist": [
    "since 2017-06"
  ]
}
